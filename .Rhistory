runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(birthrate)
tail(birthrate)
head(iusers)
runApp()
iusers <- read.delim("internet-users.csv", sep=",", check.names=F)
colnames(iusers)[1]<- "country"
iusers <-melt(iusers, id.vars="country")
iusers[is.na(iusers$value),"value"] <- 0
iusers$value <- round(iusers$value,2)
iusers$type <- "iusers"
iusers$variable <- as.numeric(as.character(iusers$variable))
head(iusers)
head(iusers[iusers$variable == 2005,], 1000)
mean(iusers[iusers$variable == 2005,value])
mean(iusers[iusers$variable == 2005,"value"])
runApp()
length(iusers[iusers$variable == 2005,"value"])
runApp()
var
variable
runApp()
runApp()
?for
runApp()
runApp()
?aggregate()
runApp()
runApp()
runApp()
iusers <- read.delim("internet-users.csv", sep=",", check.names=F)
colnames(iusers)[1]<- "country"
iusers <-melt(iusers, id.vars="country")
iusers[is.na(iusers$value),"value"] <- 0
iusers$value <- round(iusers$value,2)
iusers$type <- "iusers"
iusers$variable <- as.numeric(as.character(iusers$variable))
birthrate <- read.delim("fertility rate.csv", sep=",", check.names=F)
colnames(birthrate)[1]<- "country"
birthrate <-melt(birthrate, id.vars="country")
birthrate$variable <- as.numeric(as.character(birthrate$variable))
birthrate <- birthrate[birthrate$variable>1950,]
birthrate <- birthrate[birthrate$variable<2010,]
birthrate[is.na(birthrate$value),"value"] <- 0
birthrate$value <- round(birthrate$value,2)
birthrate$type <- "birthrate"
dataset <- rbind(iusers, birthrate)
head(dataset)
tail(dataset)
graphset <- aggregate(dataset,"variable", FUN=sum)
graphset <- aggregate(dataset,dataset$variable, FUN=sum)
graphset <- aggregate(dataset,by =dataset$variable, FUN=sum)
dataset$variable
graphset <- aggregate(dataset,by=c(dataset$country, dataset$variable), FUN=sum)
graphset <- aggregate(dataset,by=lst(dataset$country, dataset$variable), FUN=sum)
graphset <- aggregate(dataset,by=list(dataset$country, dataset$variable), FUN=sum)
class(dataset$value)
head(dataset)
graphset <- aggregate(dataset[,-type],by=list(dataset$country, dataset$variable), FUN=sum)
graphset <- aggregate(dataset[,-"type"],by=list(dataset$country, dataset$variable), FUN=sum)
graphset <- aggregate(dataset[,-3],by=list(dataset$country, dataset$variable), FUN=sum)
graphset <- aggregate(dataset[,c(-3)],by=list(dataset$country, dataset$variable), FUN=sum)
head(dataset[,-3])
head(dataset[,-4])
head(dataset[,-"value"])
head(dataset[,c(-"value"])
head(dataset[,c(-"value")]
head(dataset[,c(-"value")])
head(dataset[,-c("value")])
head(dataset[,-4]
)
graphset <- aggregate(dataset[,-4],by=list(dataset$country, dataset$variable), FUN=sum)
graphset <- aggregate(dataset[,-4],by=list("country", "variable"), FUN=sum)
head(dataset[,-4]
)
dataset <- dataset[,-4]
graphset <- aggregate(dataset,by=list("country", "variable"), FUN=sum)
graphset <- aggregate(dataset,by=list(dataset$country, dataset$variable), FUN=sum)
datset[is.na(dataset$value),]
dataset[is.na(dataset$value),]
dataset[is.na(dataset$variable),]
sum(1)
sum(1,2,3)
?agregate
?aggregate
graphset <- aggregate(dataset,by=list(country, variable), FUN=sum)
graphset <- aggregate(dataset,by=list(dataset.country, variable), FUN=sum)
state.x77
state.region
?by
?aggregate
?by
graphset<-by(dataset, list(dataset$country, dataset$variable), sum)
graphset <- aggregate(dataset,by=list(dataset$country, dataset$variable), FUN=sum)
graphset <- aggregate(head(dataset),by=list(dataset$country, dataset$variable), FUN=sum)
graphset <- aggregate(head(dataset),by=list(dataset$country, dataset$variable), FUN=sum, na.rm=T)
graphset <- aggregate(dataset,by=list(dataset$country, dataset$variable), FUN=sum, na.rm=T)
aggdata <-aggregate(mtcars, by=list(cyl,vs),
FUN=mean, na.rm=TRUE)
aggdata <-aggregate(mtcars, by=list(mtcars$cyl,mtcars$vs),
FUN=mean, na.rm=TRUE)
aggdata
head(dataset)
head(dataset[,1])
head(dataset[,2])
head(dataset[,3])
graphset <- aggregate(dataset,by=list(dataset[,1], dataset[,2]), FUN=sum, na.rm=T)
iusers <- read.delim("internet-users.csv", sep=",", check.names=F)
colnames(iusers)[1]<- "country"
iusers <-melt(iusers, id.vars="country")
iusers[is.na(iusers$value),"value"] <- 0
class(iusers$value)
iusers$variable <- type.convert(as.character(iusers$variable))
iusers <- read.delim("internet-users.csv", sep=",", check.names=F)
colnames(iusers)[1]<- "country"
iusers <-melt(iusers, id.vars="country")
iusers[is.na(iusers$value),"value"] <- 0
iusers$value <- round(iusers$value,2)
iusers$type <- "iusers"
iusers$variable <- type.convert(as.character(iusers$variable))
birthrate <- read.delim("fertility rate.csv", sep=",", check.names=F)
colnames(birthrate)[1]<- "country"
birthrate <-melt(birthrate, id.vars="country")
birthrate$variable <- type.convert(as.character(birthrate$variable))
birthrate <- birthrate[birthrate$variable>1950,]
birthrate <- birthrate[birthrate$variable<2010,]
birthrate[is.na(birthrate$value),"value"] <- 0
birthrate$value <- round(birthrate$value,2)
birthrate$type <- "birthrate"
dataset <- rbind(iusers, birthrate)
head(dataset)
graphset <- aggregate(dataset[, -4],by=list(dataset[,1], dataset[,2]), FUN=sum, na.rm=T)
dataset <- dataset[,-4]
head(dataset)
graphset <- aggregate(dataset,by=list(dataset$country, dataset$variable), FUN=sum, na.rm=T)
dataset <- dataset[,-2]
head(dataset)
graphset <- aggregate(dataset,by=list(dataset$country, dataset$variable), FUN=sum, na.rm=T)
graphset <- aggregate(dataset,by=list(dataset$country), FUN=sum, na.rm=T)
nrows(dataset)
nrow(dataset)
summary(dataset)
dataset <- rbind(iusers, birthrate)
summary(dataset)
graphset <- aggregate(dataset$value,by=list(dataset$country,dataset$variable), FUN=sum, na.rm=T)
head(graphset)
graphset <- aggregate(value = dataset$value,by=list(dataset$country,dataset$variable), FUN=sum, na.rm=T)
graphset <- aggregate(list(value = dataset$value),by=list(dataset$country,dataset$variable), FUN=sum, na.rm=T)
head(graphset)
graphset <- aggregate(list(value = dataset$value),by=list(country = dataset$country,variable = dataset$variable), FUN=sum, na.rm=T)
head(graphset)
runApp()
runApp()
runApp()
runApp()
library(data.table)
iusers <- read.delim("internet-users.csv", sep=",", check.names=F)
colnames(iusers)[1]<- "country"
iusers <-melt(iusers, id.vars="country")
iusers[is.na(iusers$value),"value"] <- 0
iusers$value <- round(iusers$value,2)
iusers$type <- "iusers"
iusers$variable <- type.convert(as.character(iusers$variable))
birthrate <- read.delim("fertility rate.csv", sep=",", check.names=F)
colnames(birthrate)[1]<- "country"
birthrate <-melt(birthrate, id.vars="country")
birthrate$variable <- type.convert(as.character(birthrate$variable))
birthrate <- birthrate[birthrate$variable>1950,]
birthrate <- birthrate[birthrate$variable<2010,]
birthrate[is.na(birthrate$value),"value"] <- 0
birthrate$value <- round(birthrate$value,2)
birthrate$type <- "birthrate"
dataset <- rbind(iusers, birthrate)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
print("hej")
print(2)
setwd("/Users/hampus/coursera/data-science-specialization/data-products/testshiny/fix-csvs")
print("hej")
print("hej")
library(xlsx)
?xlsx
test <- read.xlsx("Exports (p of GDP).xlsx", 1)
head(test)
head(test, check.names=F)
test <- read.xlsx("Exports (p of GDP).xlsx", 1, check.names=F)
head(test)
list.files()
print(zefile)
zefiles <- list.files()
zefiles
for (zefile in zefiles) {
print(zefile)
}
?set
?variable
zelist <- list("hej"=1)
zelist
zelist <- list("1"="hej")
zelist
zelist["2"] <- "sva"
zelist
rbind(zelist, list("3", "muff"))
zelist
?melt
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
a <- "cell phone per 100.xlsx"
a
test <- makezecsv(a)
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
head(test)
test
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
test <- makezecsv(a)
head(test)
x <- a
y <- read.xlsx(x, 1, check.names=F)
head(y)
colnames(y)[1]<- "country"
y <-melt(y, id.vars="country")
colnames(y)[2]<- "year"
head(y)
y[is.na(y$value),"value"] <- 0
y$value <- round(y$value,2)
y$type <- x
y$year <- type.convert(as.character(y$year))
head(y)
?write.csv
write.table(y, "../test.csv", sep = ",", row.names=F)
tail(y)
tail(y, 1000)
?grep
a
sub(".{5}$","",a)
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
a
makezecsv(a)
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
makezecsv(a)
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
makezecsv(a)
q()
makezecsv("cellphones.xlsx")
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
getwd()
setwd("../fixed-csvs/")
zefiles <- list.files()
zefiles[1]
test <- read.csv(" BMIfemale .csv", check.names=F)
head(test)
zefiles <- list.files()
dataset <- data.frame()
for (zefile in zefiles) {
rbind(dataset, read.csv(zefile, check.names =F))
}
nrow(dataset)
dataset
rbind(dataset, test)
for (zefile in zefiles) {
dataset <- rbind(dataset, read.csv(zefile, check.names =F))
}
head(dataset)
nrow(dataset)
summary(dataset)
write.table(dataset, "../dataset.csv", sep = ",", row.names=F)
cd ..
ls
source('~/coursera/data-science-specialization/data-products/testshiny/csvsfix.R')
setwd("../")
runApp()
dataset[dataset$type==iusers,]
dataset[dataset$type=="iusers",]
runApp()
is.na(dataset)
dataset[is.na(dataset$country),]
nrows(dataset)
nrow(dataset)
nrow(complete.cases(dataset)
)
nrow(dataset[complete.cases(dataset),]
nrow(dataset[complete.cases(dataset),])
runApp()
test <- dataset[dataset$type=="iusers",]
test <- test[dataset$year ==1991]
test <- test[dataset$year ==1991,]
test
test <- dataset[dataset$type=="iusers",]
test
test <- dataset[dataset$type=="iusers",]
test
test <- test[dataset$year ==1991,]
test
class(dataset$year)
test <- dataset[dataset$type=="iusers",]
test[dataset$year ==1991,]
head(test[dataset$year ==1991,])
nrow(test[dataset$year ==1991,])
tail(test[dataset$year ==1991,])
tail(test[dataset$year =="1991",])
tail(test[dataset$year ==1990,])
head(dataset[dataset$type ="iusers",])
head(dataset[dataset$type =="iusers",])
tail(dataset[dataset$type =="iusers",])
dataset <- dataset[complete.cases(dataset),]
tail(dataset[dataset$type =="iusers",])
head(dataset[dataset$type =="iusers",])
runApp()
tail(dataset[dataset$type =="iusers",])
head(dataset[dataset$type =="iusers",])
runApp()
year
variables
yr
runApp()
runApp()
runApp()
head(dataset)
dataset <- read.csv("dataset.csv", check.names=F)
head(dataset)
dataset <- dataset[complete.cases(dataset),]
head(dataset)
runApp()
runApp()
runApp()
runApp()
by(dataset, type)
by(dataset, "type")
by(dataset, dataset$type)
by(dataset, dataset$type, nrow)
test <- by(dataset, dataset$type, nrow)
test[1]
test[1][,1]
test[1][1]
test[1,1]
class(test[1])
test[1]+test[1]
test[1]$type
names(test[1])
value(test[1])
runApp8)
runApp())
runApp()
test[1]
test[1]>0
runApp()
class(test)
graphset <- dataset[dataset$type %in% input$variables,]
graphset <- dataset[dataset$type %in% "iusers",]
graphset <- graphset[graphset$year==input$yr,]
graphset
graphset <- graphset[graphset$year==1991,]
graphset
rownos <- by(graphset, graphset$type, nrow)
rownos
runApp()
rownos > 0
names(rownos > 0)
rownos > 0
rownos[rownos > 0]
complete.cases(rownos[rownos > 0 &&])
complete.cases(rownos[rownos > 0 &&,])
complete.cases(rownos[rownos > 0,])
complete.cases(rownos[rownos > 0])
rownos[complete.cases(rownos[rownos > 0])]
names(rownos[complete.cases(rownos[rownos > 0])])
runApp()
empty
rownos <- by(graphset, graphset$type, nrow)
graphset <- graphset[graphset$year==1900,]
rownos <- by(graphset, graphset$type, nrow)
rownos
activevars <- names(rownos[complete.cases(rownos[rownos > 0])])
activevars
activevars == 0
class(activevars)
length(activevars)
runApp()
?data.frame
runApp()
choices = c("Internet users" = "iusers",
"cell phone owners" = "cellphones",
"Exports (% of GDP)" = "exports",
"External debt" = "debts",
"GDP per capita" = "gdp",
"High tech exports" = "hightechexports",
"Murder rate" = "murder",
"CO2 emissions per capita" = "co2emissions",
"Life Expectancy" = "lifeexpectancy",
"Motor vehicle owners (4 wheels)" = "motorvehicles",
"Youth (15-24) literacy rate" = "youthliteracy",
"Electricity consumed per capita" = "electrictyconsumed",
"BMI average females" = "BMIfemale",
"BMI average males" = "BMImale",
"Female labourers (15-64) % of pop" = "femaleworkpop",
"Female family workers %" = "femalefamworkers",
"Male family workers %" = "malefamworkers",
"HIV Ages 15-49 % of pop" = "HIV",
"Unemployment ages 15-24" = "unemp15-24",
"Unemployement ages 25-54" = "unemp25-54",
"Suicide rates" = "suiciderates",
"Literacry rate female youth (15-24)" = "femalyouthliteracy",
"Fertility rate" = "fertilityrate")
choices
which("iusers", choices)
which(choices, "iusers")
choices["iusers"]
choices[which("iusers")]
"iusers" %in% choices
choices["iusers" %in% choices]
match("iusers", choices)
choices[match("iusers", choices)]
names(choices[match("iusers", choices)])
names(choices[match(c("iusers","unemp25-54"), choices)])
runApp()
shinyapps::setAccountInfo(
name="hampe",
token="6CFBC1CA8BF1E0E1F132D365A517C370",
secret="<SECRET>")
install.packages("shinyapps")
install.packages("shinyapps")
library("shinyapps")
library(devtools)
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shinyapps::setAccountInfo(
name="hampe",
token="6CFBC1CA8BF1E0E1F132D365A517C370",
secret="<SECRET>")
shinyapps::setAccountInfo(
name="hampe",
token="6CFBC1CA8BF1E0E1F132D365A517C370",
secret="<SECRET>")
shinyapps::setAccountInfo(
name="hampe",
token="6CFBC1CA8BF1E0E1F132D365A517C370",
secret="ytAuiuhiuHThB32wADSR/wRTNN1N8H9FciYYaqhY")
deployApp()
setwd("../slid")
setwd("../slidify")
library(slidify)
author("somedeck")
publish_github("eggsandsausage", "dataproductstuff")
publish_github("dataproductstuff", "eggsandsausage")
publish_github("dataproddeck", "eggsandsausage")
publish(user = "eggsandsausage", repo = "dataprod")
getwd()
cd ..
setwd("../")
cd ..
getwd()
author("dataprod")
publish(user = "eggsandsausage", repo = "dataprod")
publish(user = "eggsandsausage", repo = "dataprod")
publish(user = "eggsandsausage", repo = "dataprod2")
setwd("../../testshiny/")
library(shiny)
runApp()
dataset <- read.csv("dataset.csv", check.names=F)
nrow(dataset)
nrow(dataset[dataset$year > 1975,])
write.table(dataset[dataset$year > 1980,], "dataset2.csv", sep=",", row.names=F)
runApp()
deployApp()
dataset[dataset$type=="cellphones",]
runApp()
deployApp()
setwd("/Users/hampus/coursera/data-science-specialization/regression-models/motor-trend")
source('~/.active-rstudio-document', echo=TRUE)
library(datasets)
summary(mtcars)
library(knitr)
head(mtcars)
?mtcars
?plot()
?plot
plot(mtcars$am, mtcars$mpg)
hist(mtcars$mpg~mtcars$am)
hist(mtcars$am ~mtcars$mpg, mtcars$wt)
hist(mtcars$am ~mtcars$mpg)
plot(mtcars$am ~mtcars$mpg)
plot(mtcars$mpg~mtcars$am)
hist(mtcars$mpg)
hist(mtcars[mtcars$am=0,mpg])
hist(mtcars[mtcars$am==0,mpg])
hist(mtcars[mtcars$am==0,"mpg"])
hist(mtcars[mtcars$am==1,"mpg"])
lm(mtcars$mpg~mtcars$am)
fit<- lm(mtcars$mpg~mtcars$am)
summary(fit)
hist(fit$residuals)
corr(fit)
cor(fit)
cor(mtcars$am, mtcars$mpg)
cor(mtcars$am, mtcars$mpg)^2
cor(mtcars$mpg, fit$residuals)
